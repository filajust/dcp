#!/usr/bin/env bash
#
# From http://blog.pkh.me/p/21-high-quality-gif-with-ffmpeg.html
#
set -e

log_info() {
  printf "\033[0;34m[%s]:\033[0m %s\n" \
         "$(date "+%Y-%m-%dT%H:%M:%SZ")" \
         "$*"
}

log_error() {
  printf >&2 "\033[1;37;41m[%s]:\033[0m %s\n" \
             "$(date "+%Y-%m-%dT%H:%M:%SZ")" \
             "$*"
}

print_usage() {
  cat <<EOT
Usage: $(basename "$0") [options] <input>

OPTIONS:
  -h, --help                           Display this message
  -t <time>, --start <time>            Set start time [00:00:00.000] (hours:minutes:seconds.ms)
  -d <time>, --duration <time>         Set duration after start [max] (hours:minutes:seconds.ms)

  -a <algo>, --algorithm <algo>        Set dithering algorithm [floyd_steinberg]
  Algorithm options to try are bayer, floyd_steinberg, sierra2, sierra2_4a, or none.
  bayer takes an argument, it can be specified as bayer:bayer_scale=n, where n is 1 to ~3.

  -s <scale>, --scale <scale>          Set scale [480] (width in px)
  -f <fps>, --framerate <fps>          Set framerate [15] (in fps)
EOT
}

main() {
  if ! hash ffmpeg 2> /dev/null; then
    log_error "ffmpeg not found!"
    return 1
  fi

  local fps="15"
  local scale="480"
  local start_time="00:00:00.000"
  local algorithm="floyd_steinberg"
  while [[ "$#" -gt "0" ]]; do
    case "$1" in
      -h | --help)
        print_usage
        return
        ;;
      -t | --start)
        start_time="$2"
        shift
        ;;
      -d | --duration)
        duration="$2"
        shift
        ;;
      -a | --algorithm)
        algorithm="$2"
        shift
        ;;
      -s | --scale)
        scale="$2"
        shift
        ;;
      -f | --framerate)
        fps="$2"
        shift
        ;;
      -*)
        log_error "Unknown option: $1"
        printf >&2 "\n"
        print_usage >&2
        return 1
        ;;
      *)
        input="$1"
        ;;
    esac
    shift
  done

  if [[ ! -e "${input}" ]]; then
    log_error "No input file"
    printf >&2 "\n"
    print_usage >&2
    return 1
  fi

  output="${input%.*}.gif"
  palette="${input%.*}.png"

  palette_opts="paletteuse=dither=${algorithm}"
  filters="fps=${fps},scale=${scale}:-1:flags=lanczos"
  time_opts="-ss ${start_time}"
  if [[ -n "${duration}" ]]; then
    time_opts="${time_opts} -t ${duration}"
  fi

  log_info "Generating palette..."
  ffmpeg -v warning ${time_opts} -i "${input}" -vf "${filters},palettegen" -y "${palette}"

  log_info "Makin' the GIF..."
  ffmpeg -v warning ${time_opts} -i "${input}" -i "${palette}" -lavfi "${filters} [x]; [x][1:v] ${palette_opts}" -y "${output}"

  log_info "Done."
  rm -f "${palette}"
}

main "$@"
