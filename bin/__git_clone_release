#!/usr/bin/env bash
#
# __git_clone_release - clones a "release" of a Git repository, determined by
# `git describe --tags --abbrev=0'
#
set -e

log_info() {
  printf "\033[0;34m[%s]:\033[0m %s\n" \
         "$(date "+%Y-%m-%dT%H:%M:%SZ")" \
         "$*"
}

log_error() {
  printf >&2 "\033[1;37;41m[%s]:\033[0m %s\n" \
             "$(date "+%Y-%m-%dT%H:%M:%SZ")" \
             "$*"
}

main() {
  if [[ "$#" -lt "2" ]]; then
    log_error "Arguments required."
    return 1
  fi
  if [[ -e "$2" ]]; then
    log_error "Clone path already exists."
  fi
  if [[ ! -d "$(dirname "$2")" ]]; then
    log_error "Parent directory does not exist."
  fi
  if ! hash git 2> /dev/null; then
    log_error "Git not found in PATH."
    return 1
  fi

  local resolved_path="$(cd "$(dirname "$2")" && pwd -P)/$(basename "$2")"
  log_info "Cloning $1 into ${resolved_path}..."
  git clone --quiet --recursive "$1" "${resolved_path}"

  cd "${resolved_path}"
  log_info "Determining latest release..."
  local release_tag="$(git describe --tags --abbrev=0 2> /dev/null)"
  if [[ -z "${release_tag}" ]]; then
    log_error "No tagged releases found."
    return 1
  fi

  log_info "Checking out latest release..."
  git checkout --quiet "${release_tag}"

  log_info "Done."
}

main "$@"
