#!/bin/bash

start_message() {
  printf >&2 "$1 starting on ${bind_address}:9000...\n"
}

webrick() {
  start_message "WEBrick"
  exec ruby -r webrick <<-EOF
    server = WEBrick::HTTPServer.new(:BindAddress   => '${bind_address}',
                                     :Port          => 9000,
                                     :DocumentRoot  => Dir.pwd)
    trap('INT') { server.shutdown }
    server.start
EOF
}

if [[ "$#" -gt "0" ]]; then
  hash ruby 2>/dev/null || {
    printf >&2 "Error: couldn't find a Ruby interpreter.\n"
    exit 1
  }
  bind_address="$1"
  webrick
  exit
else
  bind_address="0.0.0.0"
fi

if hash twistd 2>&-; then
  start_message "Twisted"
  exec twistd -n --pidfile= web --path . --port 9000
elif hash ruby 2>&-; then
  webrick
elif hash python 2>&-; then
  start_message "SimpleHTTPServer"
  exec python -m SimpleHTTPServer 9000
else
  printf >&2 "Error: couldn't find a Ruby or Python interpreter.\n"
  exit 1
fi
