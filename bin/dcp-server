#!/bin/bash

listen_msg() {
  printf >&2 "$1 listening on ${2:-0.0.0.0}:9000...\n"
}

twisted() {
  listen_msg "Twisted"
  if [[ "$1" = "--text" ]]; then
    exec twistd --nodaemon --pidfile="" web --port="9000" --path="." --mime="text/plain"
  else
    exec twistd --nodaemon --pidfile="" web --port="9000" --path="."
  fi
}

webrick() {
  local addr="${1:-0.0.0.0}"
  listen_msg "WEBrick" "${addr}"
  exec ruby -r webrick <<-EOF
    server = WEBrick::HTTPServer.new(:BindAddress   => '${addr}',
                                     :Port          => 9000,
                                     :DocumentRoot  => Dir.pwd)
    trap('INT') { server.shutdown }
    server.start
EOF
}

if [[ "$1" = "--text" ]]; then
  hash twistd 2>/dev/null || { printf >&2 "Error: couldn't find Twisted\n"; exit 1; }
  twisted "$1"
elif [[ "$#" -gt "0" ]]; then
  hash ruby 2>/dev/null || { printf >&2 "Error: couldn't find Ruby\n"; exit 1; }
  webrick "$1"
fi

if hash twistd 2>/dev/null; then
  twisted
elif hash ruby 2>/dev/null; then
  webrick
elif hash python 2>/dev/null; then
  listen_msg "SimpleHTTPServer"
  exec python -m SimpleHTTPServer 9000
else
  printf >&2 "Error: couldn't find a Ruby or Python interpreter.\n"
  exit 1
fi
