#!/usr/bin/env bash

# Colors
BLUE="\[\033[0;34m\]"
GREEN="\[\033[0;32m\]"
CYAN="\[\033[0;36m\]"
RED="\[\033[0;31m\]"
PURPLE="\[\033[0;35m\]"
YELLOW="\[\033[1;33m\]"
LIGHTGRAY="\[\033[0;37m\]"
DARKGRAY="\[\033[1;30m\]"
WHITE="\[\033[1;37m\]"

# Mac specifics
if [[ `uname` == "Darwin" ]]; then
  alias ls="ls -G"
  alias fcache="dscacheutil -flushcache"
fi

# Linux specifics
if [[ `uname` == "Linux" ]]; then
  alias ifconfig="/sbin/ifconfig"
fi

# Mac + Linux stuff
if [[ `uname` != "SunOS" ]]; then
  alias grep="grep --color=auto"
  alias egrep="egrep --color=auto"
  alias fgrep="fgrep --color=auto"
fi

# Linux + Solaris stuff
if [ `uname` != "Darwin" ]; then
  alias ls="ls --color=auto"
  alias sshclients="ps -A | grep sshd | wc -l"
fi

alias ll="ls -la"
alias la="ls -a"
alias h="history | tail -32"

# Find function

find_stub() {
  if [ "$1" ]; then
    grep -v \.git\/ | xargs grep -sli "$1"
  fi
}

find_in_files() {
  if [[ -n "$1" && -n "$2" ]]; then
    find "$1" | find_stub "$2"
  elif [ "$1" ]; then
    find . | find_stub "$1"
  fi
}

# </3 MSU CSE
cse() {
  if [ "$CSE_USER" ]; then
    ssh "$CSE_USER@$1.cse.msu.edu"
  fi
}

# PS1 Functions

parse_identity() {
  if [[ `whoami` == "root" ]]; then
    printf "$RED\u"
  else
    printf "$GREEN\u"
  fi
  printf "$WHITE@$CYAN\h$WHITE:$PURPLE\w$WHITE"
}

parse_git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}

git_branch_colors() {
  printf "$YELLOW\$(parse_git_branch)$WHITE"
}

uid_symbol() {
  if [[ `whoami` == "root" ]]; then
    printf " $RED#$WHITE "
  else
    printf " $RED%s$WHITE " "$"
  fi
}

# Ruby
alias r="touch tmp/restart.txt"

# CoffeeScript
alias growlee="coffee -r coffeescript-growl --watch --compile"

# Git

gitpub() {
  if [ "$1" ]; then
    git push origin "${1}:refs/heads/$1"
    git fetch origin
    git config "branch.$1.remote" origin
    git config "branch.$1.merge" "refs/heads/$1"
    git checkout "$1"
  fi
}

alias ga="git add"
alias gp="git push"
alias gl="git log --stat"
alias gs="git status"
alias gc="git commit"
alias gcm="git commit -m"
alias gb="git branch"
alias gm="git merge"
alias gco="git checkout"
alias gf="git fetch"
alias gpl="git pull"
alias gn="git init && git add . && git commit -m 'Initial commit.'"

alias top_committers="git log --pretty=format:%aN | sort | uniq -c | sort -rn"
alias cmp_origin_to_master="git log origin/master..master"
alias cmp_master_to_origin="git log master..origin/master"
alias cmp_head_to_master="git log HEAD..master"
alias cmp_master_to_head="git log master..HEAD"

# Update script
update_dcp() {
  local wd=`pwd`
  cd "$HOME/.dcp"
  git checkout master
  git fetch origin
  git pull origin master
  cd "$HOME/.vim"
  git checkout master
  git fetch origin
  git pull origin master
  git submodule update --init
  git submodule foreach git pull origin master
  cd "$wd"
}
